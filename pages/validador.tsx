import Head from "next/head";
import { ValidatorContainer } from "../styles/Validator";
import { parseJwt } from "../utils/parseJwt";
import Image from "next/image";
import { useRouter } from "next/router";
import { createCheckinController } from "../controllers/Checkin.controller";
import { useEffect, useState } from "react";
import { listStoreByIdController } from "../controllers/Restaurants.controller";
import { IStores } from "../interfaces/IStores";
import Loader from "../components/Loader";

export default function Home() {
  const router = useRouter();

  const [restaurant, setRestaurant] = useState<IStores | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (router.isReady) {
      loadData();
    }
  }, [router.isReady]);

  const loadData = async () => {
    const result = await listStoreByIdController(
      `${router.query.restaurantId}`
    );
    setRestaurant(result);
    setLoading(false);
  };

  const handleClick = async () => {
    const now = new Date().getTime();
    const qrcodeDate = router.query.date;

    if (now - Number(qrcodeDate) <= 3600000) {
      const tokenData = parseJwt(`${router.query.token}`);
      const response = await createCheckinController({
        userId: tokenData.data._id,
        storeId: `${router.query.restaurantId}`,
        promotionId: `${router.query.promotionId}`,
        checkinAt: `${new Date()}`,
      });

      if (!response.error) {
        alert("Cupom validado com sucesso!");
      } else {
        alert("Ocorreu um erro ao validar o cupom, tente novamente mais tarde");
      }
    } else {
      alert("Cupom Expirado!");
    }
  };

  return (
    <>
      <Head>
        <title>Urunga - Validador</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ValidatorContainer>
        <Image
          src={"/logo.svg"}
          alt={"logo"}
          height={88}
          width={88}
          className="logo-icon"
        />
        {loading ? (
          <div className="loaderContainer">
            <Loader />
          </div>
        ) : (
          <>
            <h1>Validar </h1>
            <p>Confirmar desconto</p>
            <p>{restaurant?.promotions[Number(router.query.promotionId)]}</p>
            <button type="button" onClick={handleClick}>
              Confirmar
            </button>
          </>
        )}
      </ValidatorContainer>
    </>
  );
}
