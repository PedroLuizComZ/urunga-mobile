import Head from "next/head";
import { LoginContainer } from "../styles/Login";
import Image from "next/image";
import Link from "next/link";
import { useForm } from "react-hook-form";
import { ISigninDTO } from "../interfaces/ISigninDTO";
import { signinController } from "../controllers/Auth.controller";
import { useRouter } from "next/router";
import { parseJwt } from "../utils/parseJwt";
import Cookies from "js-cookie";
const stripe = require("stripe")(process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY);

export default function Login() {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const router = useRouter();

  const onSubmit = async (data: any) => {
    const user: ISigninDTO = data;
    const result = await signinController(user);

    if (result.status === "success") {
      const parsedToken = parseJwt(`${result.sessionToken}`);

      try {
        const session = await stripe.checkout.sessions.retrieve(
          parsedToken.data.checkoutSessionId
        );

        Cookies.set("sessionData", JSON.stringify(session));
      } catch (error) {
        console.log(error);
      }
      router.push(`/list`);
    }
  };

  return (
    <>
      <Head>
        <title>Urunga</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LoginContainer>
        <Image
          src={"/logo.svg"}
          alt={"RatingStar"}
          height={88}
          width={88}
          className="logo-icon"
        />
        <h1>Seja bem vindo! ðŸ‘‹</h1>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div className="input-group">
            <span>Email</span>
            <input
              type="email"
              {...register("email", { required: "Email Ã© ObrigatÃ³rio" })}
            />
            {errors.email && <p role="alert">{`${errors.email?.message}`}</p>}
          </div>
          <div className="input-group">
            <span>Senha</span>
            <input
              type="password"
              {...register("password", { required: "Senha Ã© ObrigatÃ³rio" })}
            />
            {errors.password && (
              <p role="alert">{`${errors.password?.message}`}</p>
            )}
          </div>
          <p className="forget-password">Esqueceu a senha</p>
          <button type="submit">Entrar</button>
        </form>
        <p>
          Nao possui uma conta?{" "}
          <label>
            <Link href="/cadastro">Cadastre-se</Link>{" "}
          </label>
        </p>
      </LoginContainer>
    </>
  );
}
